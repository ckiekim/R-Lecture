axis(2, ylim=c(0,200))
title(main="FRUIT", col.main="red", font.main=4)
title(xlab="DAY", col.lab="black")
title(ylab="PRICE", col.lab="blue")
plot(v1, type='o', col='red', ylim=c(50,200), axes=FALSE, ann=FALSE)
axis(1, at=1:5, lab=c("MON","TUE","WED","THU","FRI"))
axis(2, ylim=c(50,200))
title(main="FRUIT", col.main="red", font.main=4)
title(xlab="DAY", col.lab="black")
title(ylab="PRICE", col.lab="blue")
title(main="FRUIT", col.main="red", font.main=6)
plot(v1, type='o', col='red', ylim=c(50,200), axes=FALSE, ann=FALSE)
axis(1, at=1:5, lab=c("MON","TUE","WED","THU","FRI"))
axis(2, ylim=c(50,200))
title(main="FRUIT", col.main="red", font.main=6)
title(xlab="DAY", col.lab="black")
title(ylab="PRICE", col.lab="blue")
plot(v1, type='o', col='red', ylim=c(50,200), axes=FALSE, ann=FALSE)
axis(1, at=1:5, lab=c("MON","TUE","WED","THU","FRI"))
axis(2, ylim=c(50,200))
title(main="FRUIT", col.main="red", font.main=2)
title(xlab="DAY", col.lab="black")
title(ylab="PRICE", col.lab="blue")
plot(v1, type='o', col='red', ylim=c(50,200), axes=FALSE, ann=FALSE)
axis(1, at=1:5, lab=c("MON","TUE","WED","THU","FRI"))
axis(2, ylim=c(50,200))
title(main="FRUIT", col.main="red", font.main=4)
title(xlab="DAY", col.lab="black")
title(ylab="PRICE", col.lab="blue")
par(mfrow = c(1,3))
par(mfrow = c(1,3))
plot(v1, type="o")
plot(v1, type="s")
plot(v1, type="l")
par(mfrow = c(1,3))
pie(v1)
plot(v1, type="o")
barplot(v1)
par(mfrow = c(1, 1))
a <- c(1,2,3)
plot(a, xlab="aaa")
p=par(mgc(0,1,0))    # mgp=c(제목위치,지표값위치,지표선위치))
p=par(mgp(0,1,0))    # mgp=c(제목위치,지표값위치,지표선위치))
p=par(mgp(0,1,0))    # mgp=c(제목위치,지표값위치,지표선위치))
par(mgp(0,1,0))    # mgp=c(제목위치,지표값위치,지표선위치))
par(mgp(0,1,0))    # mgp=c(제목위치,지표값위치,지표선위치))
plot(a,xlab="aaa")
par(mgp = c(0,1,0))    # mgp=c(제목위치,지표값위치,지표선위치))
plot(a, xlab="aaa")
par(mgp = c(3,1,0))
plot(a, xlab="aaa")
par(mgp = c(3,2,0))
plot(a, xlab="aaa")
par(mgp = c(3,2,1))
plot(a, xlab="aaa")
par(oma=c(2,1,0,0))
plot(a, xlab="aaa")
par(oma = c(0,2,0,0))
plot(a, xlab="aaa")
v1 <- c(1,2,3,4,5)
v2 <- c(5,4,3,2,1)
v3 <- c(3,4,5,6,7)
plot(v1, type="s", col="red", ylim=c(1,5))
par(new=T)  # 이 부분이 중복 허용 부분입니다
plot(v2, type="o", col="blue", ylim=c(1,5))
par(new=T)  # 이 부분이 중복 허용 부분입니다
plot(v3, type="l", col="green")
par(mgp = c(3,1,0))
plot(v1, type="s", col="red", ylim=c(1,5))
par(new=T)  # 이 부분이 중복 허용 부분입니다
plot(v2, type="o", col="blue", ylim=c(1,5))
par(new=T)  # 이 부분이 중복 허용 부분입니다
plot(v3, type="l", col="green")
plot(v1, type="s", col="red", ylim=c(1,7))
par(new=T)  # 이 부분이 중복 허용 부분입니다
plot(v2, type="o", col="blue", ylim=c(1,7))
par(new=T)  # 이 부분이 중복 허용 부분입니다
plot(v3, type="l", col="green", ylim=c(1,7))
legend(4, 9, c("v1","v2","v3"),
cex=0.9, col=c("red","blue","green"), lty=1)
legend(4, 5, c("v1","v2","v3"),
cex=0.9, col=c("red","blue","green"), lty=1)
plot(v1, type="s", col="red", ylim=c(1,10))
par(new=T)  # 이 부분이 중복 허용 부분입니다
plot(v2, type="o", col="blue", ylim=c(1,10))
par(new=T)  # 이 부분이 중복 허용 부분입니다
plot(v3, type="l", col="green", ylim=c(1,10))
legend(4, 9, c("v1","v2","v3"),
cex=0.9, col=c("red","blue","green"), lty=1)
plot(v1, type="s", col="red", ylim=c(1,10))
par(new=T)  # 이 부분이 중복 허용 부분입니다
plot(v2, type="o", col="blue", ylim=c(1,10))
par(new=T)  # 이 부분이 중복 허용 부분입니다
plot(v3, type="l", col="green", ylim=c(1,10))
legend(4, 10, c("v1","v2","v3"),
cex=0.9, col=c("red","blue","green"), lty=1)
x <- 1:5
barplot(x)
barplot(x, horiz=T)
(c(5,4,3,2),2,2)
x
x <- matrix(c(5,4,3,2),2,2)
x
x <- matrix(c(5,4,3,2), nrow=2)
x
barplot(x)
barplot(x, beside=T)
barplot(x, beside=T, names=c(5,3))
barplot(x, beside=T, names=c(5,3), col=c("green","yellow"))
barplot(x, beside=T, names=c(5,3), col=c("green","yellow")
horiz = T)
barplot(x, beside=T, names=c(5,3), col=c("green","yellow"),
horiz = T)
par(oma=c(1, 0.5, 1, 0.5))    # 하, 좌, 상, 우
barplot(x, beside=T, names=c(5,3), col=c("green","yellow"),
horiz = T)
barplot(x, names=c(5,3), col=c("green","yellow"), horiz = T)
barplot(x, names=c(5,3), col=c("green","yellow"), horiz = T,
xlim = c(0,12))
barplot(x, names=c(5,3), col=c("green","yellow"), horiz = T,
xlim = c(0,10))
par(oma=c(0, 0, 0, 0))
barplot(x, names=c(5,3), col=c("green","yellow"), horiz = T,
xlim = c(0,10))
v1 <- c(100,120,140,160,180)
v2 <- c(120,130,150,140,170)
v3 <- c(140,170,120,110,160)
qty <- data.frame(BANANA=v1,CHERRY=v2,ORANGE=v3)
qty
barplot(as.matrix(qty), main="Fruit's Sales QTY",
beside=T, col=rainbow(nrow(qty)), ylim=c(0,400))
legend(14, 400, c("MON","TUE","WED","THU","FRI"), cex=0.8,
fill=rainbow(nrow(qty)))
barplot(t(qty), main="Fruits Sales QTY", ylim=c(0,900),
col=rainbow(length(qty)), space=0.1, cex.axis=0.8, las=1,
names.arg=c("MON","TUE","WED","THU","FRI"), cex=0.8)
legend(0.2, 800, names(qty), cex=0.7, fill=rainbow(length(qty)))
qty
t(qty)
barplot(t(qty), main="Fruits Sales QTY", ylim=c(0,900),
col=rainbow(length(qty)), space=0.1, cex.axis=0.8, las=1,
names.arg=c("MON","TUE","WED","THU","FRI"), cex=0.8)
legend(names(qty), cex=0.7, fill=rainbow(length(qty)))
legend(names(qty), cex=0.7, fill=rainbow(length(qty)))
legend(0.2, 800, names(qty), cex=0.7, fill=rainbow(length(qty)))
color <- c()
peach <- c(180,200,250,198,170)
colors <- c()
for (i in 1:length(peach)) {
if (peach[i] >= 200)
colors <- c(colors, 'red')
else if (peach[i] >= 180)
colors <- c(colors, 'yellow')
else
colors <- c(colors, 'green')
}
barplot(peach, main="Peach Sales QTY" ,
names.arg=c("MON","TUE","WED","THU","FRI"), col=colors)
barplot(peach, main="Peach Sales QTY" ,
names.arg=c("월","화","수","목","금"), col=colors)
boxplot(height)
boxplot(height)
height <- c(182,175,167,172,163,178,181,166,159,155)
boxplot(height)
barplot(height)
hist(height)
par(mfrow=c(1,2))
barplot(height)
hist(height)
par(mfrow=c(1,2))
barplot(height, main='Barplot of height')
hist(height)
par(mfrow=c(1,1))
p1 <- c(10,20,30,40)
pie(p1, radius=1)
pie(p1, radius=1, init.angle=90)
pie(p1, radius=1, init.angle=90, col=rainbow(length(p1)))
pie(p1, radius=1, init.angle=90, col=rainbow(length(p1)),
label=c("Week 1" ,"Week 2" , "Week 3" ,"Week 4"))
pct <- round(p1/sum(p1) * 100, 1)
pct
lab <- paste(pct," %")
lab
lab <- paste(pct, "%")
lab
pie(p1, radius=1, init.angle=90, col=rainbow(length(p1)),
label=lab)
legend(1, 1.1, c("Week 1","Week 2","Week 3","Week 4"),
cex=0.5, fill=rainbow(length(p1)))
legend(0.9, 1.1, c("Week 1","Week 2","Week 3","Week 4"),
cex=0.5, fill=rainbow(length(p1)))
legend(0.85, 1.08, c("Week 1","Week 2","Week 3","Week 4"),
cex=0.5, fill=rainbow(length(p1)))
legend(0.82, 1.08, c("Week 1","Week 2","Week 3","Week 4"),
cex=0.5, fill=rainbow(length(p1)))
pie(p1, radius=1, init.angle=90, col=rainbow(length(p1)),
label=lab)
legend(0.82, 1.08, c("Week 1","Week 2","Week 3","Week 4"),
cex=0.5, fill=rainbow(length(p1)))
lab1 <- c("Week 1","Week 2","Week 3","Week 4")
lab2 <- paste(lab1, "\n", pct, " %")
pie(p1, radius=1, init.angle=90, col=rainbow(length(p1)),
label=lab2)
install.packages('plotrix')
library(plotrix)
p1 <- c(10,20,30,40,50)
f_day <- round(p1/sum(p1)*100,1)
f_label <- paste(f_day,"%")
pie3D(p1, main="3D Pie Chart", col=rainbow(length(p1)),
cex=0.5, labels=f_label, explode=0.05)
legend(0.5, 1, c("MON","TUE","WED","THU","FRI"), cex=0.6,
fill=rainbow(length(p1)))
legend(0.7, 1.2, c("MON","TUE","WED","THU","FRI"), cex=0.6,
fill=rainbow(length(p1)))
pie3D(p1, main="3D Pie Chart", col=rainbow(length(p1)),
cex=0.5, labels=f_label, explode=0.05)
legend(0.7, 1.2, c("MON","TUE","WED","THU","FRI"), cex=0.6,
fill=rainbow(length(p1)))
legend(0.78, 1.18, c("MON","TUE","WED","THU","FRI"), cex=0.6,
fill=rainbow(length(p1)))
pie3D(p1, main="3D Pie Chart", col=rainbow(length(p1)),
cex=0.5, labels=f_label, explode=0.05)
legend(0.78, 1.16, c("MON","TUE","WED","THU","FRI"), cex=0.6,
fill=rainbow(length(p1)))
pie3D(p1, main="3D Pie Chart", col=rainbow(length(p1)),
cex=0.5, labels=f_label, explode=0.05)
legend(0.78, 1.14, c("MON","TUE","WED","THU","FRI"), cex=0.6,
fill=rainbow(length(p1)))
v1 <- c(10,12,15,11,20)
v2 <- c(5,7,15,8,9)
v3 <- c(11,20,15,18,13)
boxplot(v1,v2,v3)16
boxplot(v1,v2,v3)
boxplot(v1,v2,v3, col=c("blue","yellow","pink"),
names=c("Blue","Yellow","Pink"),
horizontal=T)
# 관계도
install.packages("igraph")
library(igraph)
g1 <- graph(c(1,2, 2,3, 2,4, 1,4, 5,5, 3,6))
plot(g1)
str(g1)
name <- c('서진수 대표이사','일지매 부장','김유신 과장','손흥민 대리','노정호 대리',
'이순신 부장','유관순 과장','신사임당 대리','강감찬 부장','광개토 과장','정몽주 대리')
pemp <- c('서진수 대표이사','서진수 대표이사','일지매 부장','김유신 과장','김유신 과장',
'서진수 대표이사','이순신 부장', '유관순 과장','서진수 대표이사',
'강감찬 부장','광개토 과장')
emp <- data.frame(이름=name, 상사이름=pemp)
emp
str(emp)
g <- graph.data.frame(emp, directed=T)
g <- graph.data.frame(emp, directed=T)
plot(g, layout=layout.fruchterman.reingold,
vertex.size=8, edge.arrow.size=0.5)
savePlot("graph/network_2.png", type='png')
png("graph/network_2.png", width=600, height=600)
plot(g, layout=layout.fruchterman.reingold,
vertex.size=8, edge.arrow.size=0.5)
png("graph/network_2.png", width=600, height=600)
dev.off()
png("graph/network_2.png", width=600, height=600)
plot(g, layout=layout.fruchterman.reingold,
vertex.size=8, edge.arrow.size=0.5)
dev.off()
dev.off()
g3 <- graph.data.frame(emp, directed=F)
plot(g3, layout=layout.fruchterman.reingold, vertex.size=8,
edge.arrow.size=0.5, vertex.label=NA)
dev.off()
plot(g3, layout=layout.fruchterman.reingold, vertex.size=8,
edge.arrow.size=0.5, vertex.label=NA)
plot(g3, layout=layout.random, vertex.size=8,
edge.arrow.size=0.5, vertex.label=NA)
plot(g3, layout=layout.kamada.kawai, vertex.size=8,
edge.arrow.size=0.5, vertex.label=NA)
install.packages("devtools")
install.packages('d3Network')
library(d3Network)
name <- c('Angela Bassett','Jessica Lange','Winona Ryder','Michelle Pfeiffer',
'Whoopi Goldberg','Emma Thompson','Julia Roberts','Sharon Stone','Meryl Streep',
'Susan Sarandon','Nicole Kidman')
pemp <- c('Angela Bassett','Angela Bassett','Jessica Lange','Winona Ryder','Winona Ryder',
'Angela Bassett','Emma Thompson', 'Julia Roberts','Angela Bassett',
'Meryl Streep','Susan Sarandon')
emp <- data.frame(이름=name,상사이름=pemp)
d3SimpleNetwork(emp, width=600, height=600, file="data/d3.html")
d3SimpleNetwork(emp, width=600, height=600, file="data/d3.html")
library(d3Network)
name <- c('Angela Bassett','Jessica Lange','Winona Ryder','Michelle Pfeiffer',
'Whoopi Goldberg','Emma Thompson','Julia Roberts','Sharon Stone','Meryl Streep',
'Susan Sarandon','Nicole Kidman')
pemp <- c('Angela Bassett','Angela Bassett','Jessica Lange','Winona Ryder','Winona Ryder',
'Angela Bassett','Emma Thompson', 'Julia Roberts','Angela Bassett',
'Meryl Streep','Susan Sarandon')
emp <- data.frame(이름=name,상사이름=pemp)
d3SimpleNetwork(emp, width=600, height=600, file="data/d3.html")
library(RCurl)
install.packages("RCurl")
library(RCurl)
name <- c('Angela Bassett','Jessica Lange','Winona Ryder','Michelle Pfeiffer',
'Whoopi Goldberg','Emma Thompson','Julia Roberts','Sharon Stone','Meryl Streep',
'Susan Sarandon','Nicole Kidman')
pemp <- c('Angela Bassett','Angela Bassett','Jessica Lange','Winona Ryder','Winona Ryder',
'Angela Bassett','Emma Thompson', 'Julia Roberts','Angela Bassett',
'Meryl Streep','Susan Sarandon')
emp <- data.frame(이름=name,상사이름=pemp)
d3SimpleNetwork(emp, width=600, height=600, file="data/d3.html")
d3SimpleNetwork(emp, width=600, height=600, file="c:/temp/d3.html")
d3SimpleNetwork(emp, width=600, height=600, file="graph/d3.html")
g <- read.csv("data/군집분석.csv", head=T)
graph <- data.frame(학생=g$학생, 교수=g$교수)
graph1 <- data.frame(학생=g$학생, 교수=g$교수)
g <- graph.data.frame(graph1, directed=T)
plot(g, layout=layout.fruchterman.reingold, vertex.size=2,
edge.arrow.size=0.5, vertex.color="green", vertex.label=NA)
# 모양 바꾸어서 출력하기
plot(g, layout=layout.kamada.kawai, vertex.size=2,
edge.arrow.size=0.5, vertex.label=NA)
V(g)$name
gubun1 <- V(g)$name
gubun1
gubun <- str_sub(gubun1,start=1,end=1)
library(stringr)
gubun <- str_sub(gubun1, start=1, end=1)
gubun
colors <- c()
sizes <- c()
for (i in 1:length(gubun)) {
if (gubun[i] == 'S') {
colors <- c(colors, 'red')
sizes <- c(sizes, 2)
} else {
colors <- c(colors, 'green')
sizes <- c(sizes, 6)
}
}
colors <- c()
sizes <- c()
for (i in 1:length(gubun)) {
if (gubun[i] == 'S') {
colors <- c(colors, 'red')
sizes <- c(sizes, 2)
} else {
colors <- c(colors, 'green')
sizes <- c(sizes, 6)
}
}
plot(g, layout=layout.fruchterman.reingold, vertex.size=sizes,
edge.arrow.size=0.5, vertex.color=colors)
plot(g, layout=layout.fruchterman.reingold, vertex.size=sizes,
edge.arrow.size=0.5, vertex.color=colors, vertex.label=NA)
plot(g, layout=layout.fruchterman.reingold, vertex.size=sizes,
edge.arrow.size=0, vertex.color=colors, vertex.label=NA)
plot(g,layout=layout.kamada.kawai,vertex.size=sizes,edge.arrow.size=0,
vertex.color=colors,vertex.label=NA)
shapes <- c()
for (i in 1:length(gubun)) {
if (gubun[i] == 'S')
shapes <- c(shapes,"circle")
else
shapes <- c(shapes,"square")
}
plot(g, layout=layout.kamada.kawai, vertex.size=sizes,
edge.arrow.size=0, vertex.color=colors,
vertex.label=NA, vertex.shape=shapes)
virus1 <- read.csv("data/메르스전염현황.csv", header=T)
d3SimpleNetwork(virus1, width=600, height=600, ="graph/mers.html")
d3SimpleNetwork(virus1, width=600, height=600, file="graph/mers.html")
d3SimpleNetwork(virus1, width=1200, height=900, file="graph/mers.html")
d3SimpleNetwork(virus1, file="graph/mers.html")
# Treemap
install.packages('treemap')
library(treemap)
total <- read.csv("학생시험결과_전체점수.csv", header=T, sep=",")
total <- read.csv("data/학생시험결과_전체점수.csv", header=T, sep=",")
total
treemap(total, vSize="점수", index=c("점수","이름"))
treemap(total, vSize="점수", index=c("조","이름"))
treemap(total, vSize="점수", index=c("점수","조","이름"))
?graph.data.frame()
# Stars
total <- read.table("data/학생별전체성적_new.txt")
total
row.names(total)<- total$이름
row.names(total)<- total$이름
row.names(total)<- total$이름
total
row.names(total)<- total$이름
# Stars
total <- read.table("data/학생별전체성적_new.txt", header=T, sep=',')
total
row.names(total)<- total$이름
total
row.names(total)<- total$이름
total <- total(, 2:7)
row.names(total)<- total$이름
total <- total[, 2:7]
total
stars(total, flip.labels=FALSE, draw.segment=FALSE,
frame.plot=TRUE, full=TRUE,
main="학생별 과목별 성적분석-STAR Chart" )
lab <- names(total)
value <- table(lab)
value
pie(value, labels=lab, radius=0.1, cex=0.6, col=NA)
# 나이팅게일 차트
stars(total, flip.labels=FALSE, draw.segment=TRUE, frame.plot=TRUE,
full=TRUE, main="학생별 과목별 성적분석-나이팅게일 챠트")
label <- names(total)
value <- table(label)
color <- c("black","red","green","blue","cyan","violet")
pie(value,labels=label,col=color,radius=0.1,cex=0.6)
# 나이팅게일 차트
stars(total, flip.labels=FALSE, draw.segment=TRUE, frame.plot=TRUE,
full=TRUE, main="학생별 과목별 성적분석-나이팅게일 챠트")
stars(total, flip.labels=FALSE, draw.segment=TRUE, frame.plot=TRUE,
full=FALSE, main="학생별 과목별 분석 다이어그램-반원챠트")
# 레이더 차트
install.packages("fmsb")
library(fmsb)
layout <- data.frame(
분석력=c(5,1),
창의력=c(15,3),
판단력=c(3,0),
리더쉽=c(5,1),
사교성=c(5,1))
set.seed(123)
data1 <- data.frame(
분석력=runif(3,1,5),
창의력=rnorm(3,10,2),
판단력=c(0.5,NA,3),
리더쉽=runif(3,1,5),
사교성=c(5,2.5,4))
runif(10)
runif(10, 2, 5)
rnorm(10)
rnorm(10, 5, 2)
data2 <- rbind(layout, data1)
op <- par(mar=c(1, 0.5, 3, 1), mfrow=c(2,2)) -- 여백과 배치를 조정합니다
radarchart(data2,axistype=1,seg=5,plty=1,title="첫번째 타입")
op <- par(mar=c(1, 0.5, 3, 1), mfrow=c(2,2))
radarchart(data2,axistype=1,seg=5,plty=1,title="첫번째 타입")
radarchart(data2,axistype=2,pcol=topo.colors(3),plty=1,title="두번째 타입")
radarchart(data2,axistype=3,pty=32,plty=1,axislabcol="grey",na.itp=FALSE,
title="세번째 타입)")
radarchart(data2,axistype=0,plwd=1:5,pcol=1,title="네번째 타입")
data2 <- rbind(layout, data1)
par(mar=c(1, 0.5, 3, 1), mfrow=c(2,2))
radarchart(data2, axistype=1, seg=5, plty=1, title="첫번째 타입")
radarchart(data2, axistype=2, pcol=topo.colors(3), plty=1, title="두번째 타입")
radarchart(data2, axistype=3, pty=32, plty=1, axislabcol="grey",
na.itp=FALSE, title="세번째 타입)")
radarchart(data2, axistype=0, plwd=1:5, pcol=1, title="네번째 타입")
par(mar=c(0, 0, 0, 0), mfrow=c(1, 1))
# 저수준 작도 함수
segments(2,2,3,3)
# 저수준 작도 함수
var1 <- 1:5
plot(var1)
par(mar=c(0, 0, 0, 0), mfrow=c(1, 1))
plot(var1)
segments(2,2,3,3)
arrows(5,5,3,3)
arrows(5,5,4,4)
plot(var1)
segments(2,2,3,3)
arrows(5,5,4,4)
text(1,4,'labels')
text(2,4,'labels')
plot(var1)
segments(2,2,3,3)
arrows(5,5,4,4)
text(2,4,'labels')
text(3,2,"테스트",srt=45)
plot(1:15)
abline(h=8)  # 선 긋기
rect(1,6,3,8)  # 사각형 그리기
arrows(1,1,5,5) # 화살표 그리기
text(8,9,"TEXT")  # 글자 쓰기
title("THIS IS TEST","SUB") # 제목 표시하기
(mar=c(0.5, 0.5, 0.5, 0.5), mfrow=c(1, 1))
(mar=c(0.5, 0.5, 0.5, 0.5), mfrow=c(1, 1))
par(mar=c(0.5, 0.5, 0.5, 0.5), mfrow=c(1, 1))
plot(1:15)
abline(h=8)  # 선 긋기
rect(1,6,3,8)  # 사각형 그리기
arrows(1,1,5,5) # 화살표 그리기
text(8,9,"TEXT")  # 글자 쓰기
title("THIS IS TEST","SUB") # 제목 표시하기
par(mar=c(1,1,1,1), mfrow=c(1, 1))
plot(1:15)
abline(h=8)  # 선 긋기
rect(1,6,3,8)  # 사각형 그리기
arrows(1,1,5,5) # 화살표 그리기
text(8,9,"TEXT")  # 글자 쓰기
title("THIS IS TEST","SUB") # 제목 표시하기
plot(1:15)
abline(h=8)  # 선 긋기
rect(1,6,3,8)  # 사각형 그리기
arrows(1,1,5,5) # 화살표 그리기
text(8,9,"TEXT")  # 글자 쓰기
title("THIS IS TEST","SUB") # 제목 표시하기
iris
View(iris)
# iris 데이터로 그래프 그리기
#1. 산점도
library(dplyr)
iris_setosa <- filter(iris, Species == 'setosa')
iris_setosa
iris_virginica <- filter(iris, Species == 'virginica')
iris_vesicolor <- filter(iris, Species == 'vesicolor')
plot(iris_setosa$Sepal.Length, iris_setosa$Sepal.Width)
