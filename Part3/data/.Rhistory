install.packages("googleVis")
library("googleVis")
install.packages(“sqldf”)
install.packages("sqldf")
(sqldf)
library(sqldf)
Fruits
getwd()
setwd("d:/Workspace/R_Data_Analysis/Part3/data")
write.csv(Fruits,"Fruits_sql.csv",quote=F,row.names=F)
fruits_2 <-read.csv.sql("Fruits_sql.csv", sql="SELECT * FROM file WHERE Year = 2008")
fruits_2
install.packages("XLConnect")
library(XLConnect)
excel = odbcConnectExcel('fruits_6.xls',readOnly=F)
excel = loadWorkbook("fruits_6.xls",readOnly=F)
excel = loadWorkbook("fruits_6.xls")
excel
wb = loadWorkbook("fruits_6.xls")
wb = loadWorkbook("fruits_6.xls")
excel = readWorksheet(wb, startRow = 1, endRow = 6,
startCol = 0, endCol = 0)
excel = readWorksheet(wb, sheet='Sheet1', startRow = 1, endRow = 6,
startCol = 0, endCol = 0)
excel
excel = readWorksheet(wb, sheet='Sheet1', startRow = 0, endRow = 6,
startCol = 0, endCol = 0)
excel
excel = readWorksheet(wb, sheet='Sheet1', startRow = 0, endRow = 0, startCol = 0, endCol = 0)
excel
excel = readWorksheet(wb, sheet='Sheet1')
excel
data1 = sqlTables(excel)
install.packages("RODBC")
library(RODBC)
= sqlTables(excel)
data1 = sqlTables(excel)
excel = odbcConnectExcel('fruits_6.xls',readOnly=F)
f6 <- read.delim("clipboard",header=T)
f6
install.packages("XML")
library(XML)
pop <- 'http://en.wikipedia.org/wiki/World_population'
pop_table <- readHTMLTable(pop)
pop
pop_table <- readHTMLTable(pop,which=4)
install.packages("RCurl")
install.packages("httr")
library(httr)
cafile <- system.file("CurlSSL", "cacert.pem", package = "RCurl")
page <- GET("https://en.wikipedia.org/", path="wiki/World_population",
config(cainfo = cafile))
x <- content(page, as = ‘text’)
x <- content(page, as = 'text')
tab <- sub('.*(<table class="grid".*?>.*</table>).*', '\\1', x)
pop_table <- readHTMLTable(tab)
length(pop_table)
pop_table <- readHTMLTable(tab,which=5)
pop_table <- readHTMLTable(tab)
pop_table
vec1 <- c(1,2,3,4,5)
vec2 <- c('a','b','c','d','e')
max(vec1)
mean(vec1)
Fruits
aggregate(Sales~Year, Fruits, sum)
aggregate(Sales~Fruit, Fruits, sum)
aggregate(Sales~Fruit,Fruits,max)
aggregate(Sales~Fruit+Year,Fruits,max)
mat1 <- matrix(c(1,2,3,4,5,6),nrow=2,byrow=T); mat1
apply(mat1, 1, sum)
apply(mat1, 2, sum)
apply(mat1[,c(2,3)], 2, max)
pop_table <- readHTMLTable(tab,which=5)
list1 <- list(Fruits$Sales)
list1
list2 <- list(Fruits$Profit)
list2
lapply(c(list1,list2),max)
sapply(c(list1,list2),max)
lapply(Fruits[,c(4,5)],max)
sapply(Fruits[,c(4,5)],max)
tapply(Sales,Fruit,sum)
attach(Fruits)
tapply(Sales,Fruit,sum)
tapply(Sales,Year,sum)
vec1 <- c(1,2,3,4,5)
vec2 <- c(10,20,30,40,50)
vec3 <- c(100,200,300,400,500)
mapply(sum,vec1,vec2,vec3)
data1<-read.csv("data1.csv")
data1
apply(data1,2,sum)
apply(data1[,c(2,15)],2,sum)
apply(data1[,c(2:15)],2,sum)
apply(data1[,c(2:15)],1,sum)
summary(data1)
describe(data1)
data2<-read.csv("1-4호선승하차승객수.csv")
data2
tapply(승차, 노선번호, sum)
attach(data2)
tapply(승차, 노선번호, sum)
sapply(data2[,c(3,4)], sum)
tapply(승차+하차, 노선번호, sum)
aggregate(노선번호~승차+하차, data2, sum)
aggregate(승차+하차~노선번호, data2, sum)
aggregate(승차~노선번호, data2, sum)
aggregate(하차~노선번호, data2, sum)
(plyr)
library(plyr)
fruits<-read.csv("fruits_10.csv",header=T)
fruits
ddply(fruits,'name',summarise)
ddply(fruits,'name',summarise), sum_qty=sum(qty),
sum_price=sum(price))
ddply(fruits,'name',summarise), sum_qty=sum('qty'),
sum_price=sum('price'))
ddply(fruits,'name',summarise, sum_qty=sum(qty),
sum_price=sum(price))
ddply(fruits,'name‘ , summarise , max_qty=max(qty), min_price=min(price))
ddply(fruits,'name‘ , summarise , max_qty=max(qty), min_price=min(price))
ddply(fruits,'name' , summarise , max_qty=max(qty), min_price=min(price))
ddply(fruits,c('year','name'), summarise ,max_qty=max(qty),
min_price=min(price))
ddply(fruits,'year',summarise, sum_qty=sum(qty),
sum_price=sum(price))
ddply(fruits,'name', transform ,sum_qty=sum(qty),
pct_qty=(100*qty)/sum(qty))
install.packages("dplyr")
data1 <- read.csv("2013년_프로야구선수_성적.csv")
data1
data2<-filter(data1, 경기>120)
data1 <- read.csv("2013년_프로야구선수_성적.csv",encoding="EUC-KR")
data1
data2<-filter(data1, 경기>120)
data1 <- read.csv("2013년_프로야구선수_성적.csv",header=T)
data2<-filter(data1, 경기>120)
data1$경기
data1 <- read.csv("2013년_프로야구선수_성적_utf.csv",header=T)
data1 <- read.csv("2013년_프로야구선수_성적.csv",header=T)
data1
data2<-filter(data1, game>120)
data1$game
library(dplyr)
data2<-filter(data1, game>120)
data1 <- read.csv("2013년_프로야구선수_성적.csv",header=T)
data2<-filter(data1, 경기>120)
?subset()
data3 <- filter(data1,경기 > 120 & 득점 > 80 )
data3
data4 <- filter(data1,포지션 %in% c('1루수','3루수'))
data4
data1 %>%
filter(data1,포지션 %in% c('1루수','3루수')) %>%
select(data1,선수명,포지션,팀)
data1 %>%
filter(포지션 %in% c('1루수','3루수')) %>%
select(선수명,포지션,팀)
data1 %>%
filter(포지션 %in% c('1루수','3루수')) %>%
select(-홈런,-타점,-도루)
data1 %>%
select (선수명,팀,경기,타수) %>%
filter(타수 > 400) %>%
arrange(타수)
data1 %>%
select (선수명,팀,경기,타수) %>%
filter(타수 > 400) %>%
arrange(타수, decrease=T)
data1 %>%
select (선수명,팀,경기,타수) %>%
filter(타수 > 400) %>%
arrange(desc(타수))
data1 %>%
select(선수명,팀,장타율,출루율) %>%
mutate(OPS=장타율+출루율) %>%
arrange(desc(OPS))
data1 %>%
group_by(팀)%>%
summarise_each(funs(mean),경기,타수)
data1 %>%
group_by(팀)%>%
summarise_each(list(~ mean),경기,타수)
data1 %>%
group_by(팀)%>%
summarise_each(list(mean),경기,타수)
data1 %>%
group_by(팀)%>%
summarise_each(list(mean,n( )),경기,타수)
data1 %>%
group_by(팀)%>%
summarise_each(funs(mean,n( )),경기,타수)
install.packages("reshape2")
library("reshape2")
fruits
melt(fruits,id='year')
melt(fruits,id=c('year','name'))
melt(fruits,id=c('year','name'),variable.name='var_name',
value.name='val_name')
melt(fruits,id=c('year','name'),variable.name='var_name',
value.name='val_name')
mtest<-melt(fruits,id=c('year','name'),variable.name='var_name',
value.name='val_name')
dcast(mtest,year+name~var_name)
dcast(mtest,name~var_name,sum)
install.packages("stringr")
install.packages("stringr")
library(stringr)
fruits <- c('apple','Apple','banana','pineapple')
str_detect(fruits,'A')
> str_detect(fruits,'^[aA]')
str_detect(fruits,'^[aA]')
str_detect(fruits,ignore.case('a'))
str_detect(fruits, ignore.case('a'))
?ignore.case()
library(stringr)
str_detect(fruits, ignore.case('a'))
rm(list = ls())
# Load and Save Data
list.files()
scan1 <- scan('scan_1.txt')
scan1
scan2 <- scan('scan_2.txt')    # 1.00  2.00  3.00  4.00
scan2
scan2 <- scan('scan_2.txt',what=""); scan2
scan3 <- scan('scan_3.txt',what=""); scan3
scan4 <- scan('scan_4.txt',what=""); scan4
input <- scan()
input
input <- scan(what="")
input
input <- scan()
input
input <- scan(what="")
input
input3 <- readline()
input3
input4 <- readline("Are you OK? :" )
input5 <- readLines('scan_4.txt')
input5
fruits <- read.table('fruits.txt')
fruits
fruits <- read.table('fruits.txt', header=T)
fruits
fruit2 <- read.table('fruits_2.txt'); fruits2
fruit2 <- read.table('fruits_2.txt'); fruit2
fruit2 <- read.table('fruits_2.txt', skip=2); fruit2
fruit2 <- read.table('fruits_2.txt', nrows=2); fruit2
f2top <- read.table('fruits_2.txt', nrows=2)
f2bottom <- read.table('fruits_2.txt', skip=3)
f2top; f2bottom
f2top <- read.table('fruits_2.txt', nrows=2)
f2bottom <- read.table('fruits_2.txt', skip=3)
f2top; f2bottom
fruit3 <- read.csv('fruits_3.csv')
fruit3
fruit4 <- read.csv('fruits_4.csv')    # 헤더가 없는 경우
fruit4
fruit4 <- read.csv('fruits_4.csv', header=F)
fruit4
label <- c('NO','NAME','PRICE','QTY')
fruit4 <- read.csv('fruits_4.csv', header=F, col.names=label)
fruit4
install.packages("googleVis")
library(googleVis)
install.packages(“sqldf”)
install.packages(“sqldf”)
install.packages("sqldf")
library(sqldf)
Fruits
write.csv(Fruits, "Fruits_sql.csv", quote=F, row.names=F)
fruits_2 <-read.csv.sql("Fruits_sql.csv",
sql="SELECT * FROM file WHERE Year = 2008")
Fruits_2
fruits_2
Fruits[c(Year==2008),]
install.packages("XLConnect")
installed.packages()
library(XLConnect)
data1=loadWorkbook("fruits_6.xls", create=T)
data2 <- readWorksheet(data1,sheet="sheet1",
startRow=1 ,endRow=8 ,startCol=1 ,endCol=5)
data2
data2 <- readWorksheet(data1,sheet="sheet1")
data2
fruits6 <- read.delim("clipboard", header=T)
fruits6
install.packages('readxl')
library(readxl)
fruits7 <- read_excel("fruits_6.xls", # path
sheet = "Sheet1", # sheet name to read from
range = "A2:D6", # cell range to read from
col_names = TRUE, # TRUE to use the first row as column names
col_types = "guess", # guess the types of columns
na = "NA") # Character vector of strings to use for missing values
fruits7
subset(Fruits, Fruits$Year==2008)
# Function
?subset()
??ggplot2
??read.csv.sql
vec1 <- c(1:5)
vec2 <- c('a','b','c','d','e')
max(vec1)
max(vec2)
mean(vec1)
mean(vec2)
min(vec1)
sd(vec1)
sum(vec1)
var(vec1)
library(googleVis)
Fruits
aggregate(Sales~Year, Fruits, sum)
aggregate(Sales~Year, Fruits, max)
aggregate(Sales~Year, Fruits, mean)
aggregate(Sales~Fruit, Fruits, sum)
aggregate(Sales~Fruit, Fruits, max)
mat1 <- matrix(c(1:6), nrow = 2, byrow = T); mat1
apply(mat1, 1, sum)    # 1 - 행 단위 계산
apply(mat1, 2, sum)    # 2 - 열 단위 계산
apply(mat1, 1, prod)
apply(mat1[,c(2,3)], 1, sum)
list1 <- Fruits$Sales; list1
list1 <- list(Fruits$Sales); list1
list2 <- list(Fruits$Profit); list2
list1 <- list(Fruits$Sales); list1
list2 <- list(Fruits$Profit); list2
lapply(c(list1, list2), max)
sapply(c(list1, list2), max)
lapply(Fruits[,c(4,5)],max)
sapply(Fruits[,c(4,5)],max)
Fruits
tapply(Sales,Fruit,sum)
attach(Fruits)
tapply(Sales, Fruit, sum)
tapply(Sales, Year, sum)
vec2 <- c(10:50:10)
vec2 <- c(seq(10:50:10))
vec2 <- seq(10:50:10)
vec2 <- seq(10,50,10)
vec3 <- seq(100, 500, 100)
mapply(sum, vec1, vec2, vec3)
# apply() 계열 연습문제
data1<-read.csv("data1.csv")
apply(data1[,c(2:15)],2,sum)
apply(data1[,c(2:15)],1,sum)
apply(data1[,c(2:15)], 2, sum)
apply(data1[,-1], 1, sum)
data2<-read.csv("1-4호선승하차승객수.csv")
attach(data2)
tapply(승차, 노선번호, sum)
sapply(data2[,c(3,4)], sum)
tapply(하차, 노선번호, sum)
tapply(승차+하차, 노선번호, sum)
aggregate(승차+하차~노선번호, data2, sum)
aggregate(승차~노선번호, data2, sum)
aggregate(하차~노선번호, data2, sum)
aggregate(하차~노선번호, data2, sum)
data1 <- read.csv("data1.csv")
data1
apply(data1[,c(2:15)], 2, sum)
apply(data1[,-1], 1, sum)
data2<-read.csv("1-4호선승하차승객수.csv")
data2
attach(data2)
tapply(승차, 노선번호, sum)
tapply(하차, 노선번호, sum)
sapply(data2[,c(3,4)], sum)
aggregate(승차~노선번호, data2, sum)
aggregate(하차~노선번호, data2, sum)
aggregate(승차+하차~노선번호, data2, sum)
# Function
mat1 <- matrix(c(1:6), nrow = 2, byrow = T)
a <- rep(1, 3)
sweep(mat1, 2, a)
b <- matrix(c(2, 2))
sweep(mat1, 1, b)
b
a <- c(1,2,3,4,5); length(a)
length(mat1)
library(googleVis)
length(Fruits)
log(10)
log10(10)
sin(pi)
abs(-1)
v2 <- c(1,-2,3,-4)
abs(v2)
ceiling(2.3)
floor(2.3)
ceiling(-2.3)
floor(-2.3)
round(2.5)
round(2.51)
?round()
choose(5, 3)
myfunc <- function() {
return(10)
}
myfunc <- function() {
return(10)
}
myfunc()
{
y = x * x;
return(y)
}
myfunc2 <- function(x) {
y = x * x;
return(y)
}
myfun2(-3)
myfunc2(-3)
# 연습문제
exfunc1 <- function(a, b) {
result <- a - b
return(result)
}
exfunc1(3, 5)
exfunc1(56, 34)
exfunc2 <- function(a, b) {
result <- abs(exfunc1(a, b))
return(result)
}
exfunc2(123, 456)
exfunc2(123, 456)
